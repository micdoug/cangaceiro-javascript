{"version":3,"sources":["../../app-src/util/Bind.js"],"names":["ProxyFactory","Bind","constructor","model","view","observableProperties","proxy","create","update"],"mappings":";;;;;;AAASA,kB,mBAAAA,Y;;;UAIIC,I,GAAN,MAAMA,IAAN,CAAW;AAChBC,oBAAYC,KAAZ,EAAmBC,IAAnB,EAAyBC,oBAAzB,EAA+C;AAC7C,gBAAMC,QAAQN,aAAaO,MAAb,CAAoBJ,KAApB,EAA2BE,oBAA3B,EACZ,MAAMD,KAAKI,MAAL,CAAYL,KAAZ,CADM,CAAd;AAEAC,eAAKI,MAAL,CAAYL,KAAZ;AACA;AACA,iBAAOG,KAAP;AACD;AAPe,O","file":"Bind.js","sourcesContent":["import { ProxyFactory } from \"./ProxyFactory.js\";\n\n// Wraps a model in a proxy that observes function calls or property changes\n// and calls the view update method when appropriate.\nexport class Bind {\n  constructor(model, view, observableProperties) {\n    const proxy = ProxyFactory.create(model, observableProperties,\n      () => view.update(model));\n    view.update(model);\n    // returning from a constructor??? WTF\n    return proxy;\n  }\n}"]}