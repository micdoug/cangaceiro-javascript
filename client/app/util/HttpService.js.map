{"version":3,"sources":["../../app-src/util/HttpService.js"],"names":["HttpService","get","url","response","fetch","ok","Error","statusText","json"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAAaA,W,GAAN,MAAMA,WAAN,CAAkB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEMC,WAAN,CAAUC,GAAV,EAAe;AAAA;AACb,kBAAMC,WAAW,MAAMC,MAAMF,GAAN,CAAvB;AACA,gBAAI,CAACC,SAASE,EAAd,EAAkB;AAChB,oBAAM,IAAIC,KAAJ,CAAUH,SAASI,UAAnB,CAAN;AACD;AACD,mBAAOJ,SAASK,IAAT,EAAP;AALa;AAMd;AAxBsB,O","file":"HttpService.js","sourcesContent":["export class HttpService {\n  // get(url) {\n  //   return new Promise((resolve, reject) => {\n  //     const xhr = new XMLHttpRequest();\n  //     xhr.open(\"GET\", url);\n  //     xhr.onreadystatechange = () => {\n  //       if (xhr.readyState === 4) {\n  //         if (xhr.status === 200) {\n  //           resolve(JSON.parse(xhr.responseText));\n  //         } else {\n  //           reject(xhr.responseText);\n  //         }\n  //       }\n  //     };\n  //     xhr.send();\n  //   });\n  // }\n\n  async get(url) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  }\n}"]}